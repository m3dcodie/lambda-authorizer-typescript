openapi: 3.0.0
info:
  title: Learning
  version: 0.0.1
  description: Learning API
  contact:
    name: Learning API Support
    email: suhail.mtahir@gmail.com
schemes: 
  - https
  
paths:
  /users/{id}:
    get:
      tags:
        - Users
      summary: Get the user information by id.
      description: >
        This resource represents an individual user in the system.
          Each user is identified by a numeric `id`.
      
      parameters:
        - name: id
          in: path
          description: The user ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Users
      summary: Update the user information by id.
      description: >
        This resource represents an individual user in the system.
          Each user is identified by a numeric `id`.
      
      parameters:
        - name: id
          in: path
          description: The user ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user
    post:
      tags:
        - Users
      summary: Create a new user.
      description: >
        This resource represents an individual user in the system.
          Each user is identified by a numeric `id`.
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'              
components:
securitySchemes:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-KEY
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - name
        - email
    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - name
        - email    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
```